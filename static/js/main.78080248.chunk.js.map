{"version":3,"sources":["useTypingGame.js","App.js","index.js"],"names":["useTypingGame","STARTING_TIME","useState","text","setText","timeRemaining","setTimeRemaining","isTimeRemaining","setIsTimeRemaining","wordCount","setWordCount","textBoxRef","useRef","handleChange","e","value","target","calculateWordCount","trim","split","filter","word","length","startGame","current","disabled","focus","endGame","useEffect","setTimeout","time","App","Fragment","ref","onChange","onClick","ReactDOM","render","document","getElementById"],"mappings":"sQAoDeA,MAlDf,WAA4C,IAArBC,EAAoB,uDAAJ,GAAI,EACjBC,mBAAS,IADQ,mBAClCC,EADkC,KAC5BC,EAD4B,OAECF,mBAASD,GAFV,mBAElCI,EAFkC,KAEnBC,EAFmB,OAGKJ,oBAAS,GAHd,mBAGlCK,EAHkC,KAGjBC,EAHiB,OAIPN,mBAAS,GAJF,mBAIlCO,EAJkC,KAIvBC,EAJuB,KAKnCC,EAAaC,iBAAO,MAE1B,SAASC,EAAaC,GAAI,IAChBC,EAAUD,EAAEE,OAAZD,MACRX,EAAQW,GAGV,SAASE,EAAmBd,GAE1B,OADiBA,EAAKe,OAAOC,MAAM,KACnBC,QAAO,SAACC,GAAD,MAAmB,KAATA,KAAaC,OAGhD,SAASC,IACPf,GAAmB,GACnBF,EAAiBL,GACjBG,EAAQ,IACRO,EAAWa,QAAQC,UAAW,EAC9Bd,EAAWa,QAAQE,QAGrB,SAASC,IACPnB,GAAmB,GACnBE,EAAaO,EAAmBd,IAalC,OAVAyB,qBAAU,WACJrB,GAAmBF,EAAgB,EACrCwB,YAAW,WACTvB,GAAiB,SAACwB,GAAD,OAAUA,EAAO,OACjC,KACwB,IAAlBzB,GACTsB,MAED,CAACtB,EAAeE,IAEZ,CACLI,aACAE,eACAV,OACAI,kBACAF,gBACAkB,YACAd,cChBWsB,MA7Bf,WAAgB,IAAD,EAST/B,IAPFW,EAFW,EAEXA,WACAE,EAHW,EAGXA,aACAV,EAJW,EAIXA,KACAI,EALW,EAKXA,gBACAF,EANW,EAMXA,cACAkB,EAPW,EAOXA,UACAd,EARW,EAQXA,UAGF,OACE,kBAAC,IAAMuB,SAAP,KACE,sDACA,8BACEC,IAAKtB,EACLuB,SAAUrB,EACVE,MAAOZ,EACPsB,UAAWlB,IAEb,+CAAqBF,GACrB,4BAAQ8B,QAASZ,EAAWE,SAAUlB,GAAtC,SAGA,2CAAiBE,KCvBvB2B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.78080248.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\n\nfunction useTypingGame(STARTING_TIME = 10) {\n  const [text, setText] = useState(\"\");\n  const [timeRemaining, setTimeRemaining] = useState(STARTING_TIME);\n  const [isTimeRemaining, setIsTimeRemaining] = useState(false);\n  const [wordCount, setWordCount] = useState(0);\n  const textBoxRef = useRef(null);\n\n  function handleChange(e) {\n    const { value } = e.target;\n    setText(value);\n  }\n\n  function calculateWordCount(text) {\n    const wordsArr = text.trim().split(\" \");\n    return wordsArr.filter((word) => word !== \"\").length;\n  }\n\n  function startGame() {\n    setIsTimeRemaining(true);\n    setTimeRemaining(STARTING_TIME);\n    setText(\"\");\n    textBoxRef.current.disabled = false;\n    textBoxRef.current.focus();\n  }\n\n  function endGame() {\n    setIsTimeRemaining(false);\n    setWordCount(calculateWordCount(text));\n  }\n\n  useEffect(() => {\n    if (isTimeRemaining && timeRemaining > 0) {\n      setTimeout(() => {\n        setTimeRemaining((time) => time - 1);\n      }, 1000);\n    } else if (timeRemaining === 0) {\n      endGame();\n    }\n  }, [timeRemaining, isTimeRemaining]);\n\n  return {\n    textBoxRef,\n    handleChange,\n    text,\n    isTimeRemaining,\n    timeRemaining,\n    startGame,\n    wordCount,\n  };\n}\nexport default useTypingGame;\n","import React from \"react\";\nimport \"./App.css\";\nimport useTypingGame from \"./useTypingGame\";\n\nfunction App() {\n  const {\n    textBoxRef,\n    handleChange,\n    text,\n    isTimeRemaining,\n    timeRemaining,\n    startGame,\n    wordCount,\n  } = useTypingGame();\n\n  return (\n    <React.Fragment>\n      <h1>How Fast Can You Type?</h1>\n      <textarea\n        ref={textBoxRef}\n        onChange={handleChange}\n        value={text}\n        disabled={!isTimeRemaining}\n      />\n      <h4>Time Remaining: {timeRemaining}</h4>\n      <button onClick={startGame} disabled={isTimeRemaining}>\n        Start\n      </button>\n      <h1>Word Count: {wordCount}</h1>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}